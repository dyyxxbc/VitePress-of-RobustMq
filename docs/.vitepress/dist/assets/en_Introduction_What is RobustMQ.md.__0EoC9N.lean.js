import{_ as t}from"./chunks/doc-image5.Ck3OLniX.js";import{_ as s,c as o,a2 as i,o as r}from"./chunks/framework.BQmytedh.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"en/Introduction/What is RobustMQ.md","filePath":"en/Introduction/What is RobustMQ.md"}'),l={name:"en/Introduction/What is RobustMQ.md"};function a(n,e,c,p,u,d){return r(),o("div",null,e[0]||(e[0]=[i('<p>[zh - 简介 - What is 什么是 RobustMQ](../../zh/简介/什么是 RobustMQ) RobustMQ MQTT is a complete implementation of the MQTT protocol adapted by RobustMQ. It supports:</p><ul><li>Clustered deployment with seamless horizontal scaling.</li><li>A single node can handle millions of connections.</li><li>Full support for MQTT 3.1/3.1.1/5.0 protocols.</li><li>Supports TCP, SSL, WebSocket, and WebSockets protocols.</li><li>Supports session management, including session persistence and expiration.</li><li>Supports retained messages.</li><li>Supports will messages.</li><li>Supports shared subscriptions.</li><li>Supports system topics.</li><li>Supports Schema.</li><li>Supports data integration.</li></ul><p>The overall architecture is as follows: <img src="'+t+'" alt="image"></p><ul><li>MQTT Broker is a stateless node, and MQTT clients randomly access a Broker to complete Pub/Sub of message data.</li><li>MQTT Broker performs node discovery and node health checks based on the Placement Center, thus completing node construction.</li><li>The MQTT cluster persists message through the Storage Adapter layer. The cluster’s metadata is stored in the Placement Center Cluster.</li><li>MQTT Broker supports MQTT 3.1/3.1.1/5.0 protocols over TCP and the internal management and scheduling of the cluster based on the GRPC protocol.</li><li>The Placement Center runs the corresponding controller threads of the MQTT Broker cluster, responsible for tasks like cluster scheduling, such as assigning a Leader in a shared cluster.</li></ul>',4)]))}const g=s(l,[["render",a]]);export{T as __pageData,g as default};
